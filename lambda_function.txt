# Lambda Function Code (save as lambda_function.py)
import json
import boto3
import urllib.parse

def lambda_handler(event, context):
    # Initialize S3 client
    s3 = boto3.client('s3')
    
    # Get bucket and file information from event
    bucket = event['Records'][0]['s3']['bucket']['name']
    key = urllib.parse.unquote_plus(event['Records'][0]['s3']['object']['key'])
    
    try:
        # Get the object from S3
        response = s3.get_object(Bucket=bucket, Key=key)
        file_content = response['Body'].read().decode('utf-8')
        
        # Process the file (example: print content)
        print(f"File {key} content: {file_content}")
        
        return {
            'statusCode': 200,
            'body': json.dumps(f'Successfully processed {key}')
        }
        
    except Exception as e:
        print(e)
        return {
            'statusCode': 500,
            'body': json.dumps(f'Error processing {key}: {str(e)}')
        }

# Setup Instructions (run these commands in AWS CLI or Console)
"""
1. Create an S3 bucket (if not exists):
aws s3 mb s3://your-bucket-name

2. Create Lambda function:
aws lambda create-function \
    --function-name S3TriggerLambda \
    --runtime python3.9 \
    --role arn:aws:iam::YOUR_ACCOUNT_ID:role/lambda-s3-role \
    --handler lambda_function.lambda_handler \
    --zip-file fileb://lambda_function.zip

3. Add S3 trigger to Lambda:
aws lambda add-permission \
    --function-name S3TriggerLambda \
    --statement-id s3-trigger \
    --action lambda:InvokeFunction \
    --principal s3.amazonaws.com \
    --source-arn arn:aws:s3:::your-bucket-name \
    --source-account YOUR_ACCOUNT_ID

4. Configure S3 event notification:
aws s3api put-bucket-notification-configuration \
    --bucket your-bucket-name \
    --notification-configuration '{
        "LambdaFunctionConfigurations": [
            {
                "Id": "S3Trigger",
                "LambdaFunctionArn": "arn:aws:lambda:YOUR_REGION:YOUR_ACCOUNT_ID:function:S3TriggerLambda",
                "Events": ["s3:ObjectCreated:*", "s3:ObjectRemoved:*"]
            }
        ]
    }'

5. Create IAM role for Lambda (lambda-s3-role) with this policy:
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject"
            ],
            "Resource": "arn:aws:s3:::your-bucket-name/*"
        }
    ]
}
"""
